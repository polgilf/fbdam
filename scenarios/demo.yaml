version: v1.0
name: Demo — maximize TNU baseline
status: demo

# Paths relative to this scenario file.
data:
  items_csv: ../data/demo/items.csv
  nutrients_csv: ../data/demo/nutrients.csv
  households_csv: ../data/demo/households.csv
  requirements_csv: ../data/demo/requirements.csv
  item_nutrients_csv: ../data/demo/item_nutrients.csv
  household_item_bounds_csv: ../data/demo/household_item_bounds.csv
  params_yaml: ../data/demo/params.yaml

model:
  description: |
    Minimal end-to-end demo that loads the bundled CSVs and the relaxed
    dial configuration from params.yaml. The model maximizes total nutrient
    utility (TNU) without a monetary budget or fairness caps.
  params:
    # Use “integer” (default) for discrete allocations, or “continuous” for real values.
    x_integrality: continuous
  constraints:
    - ref: nutrition_utility_mapping
    - ref: item_supply_limit
    - ref: purchase_budget_limit
      override:
        budget: 10
    # Equity activation and dials 
    - ref: fairshare_deviation_identity
    - ref: item_equity_aggregate_cap
      override:
        alpha: 0.5 # 0 for perfect fairness, 1 for no fairness constraint
    - ref: household_equity_aggregate_cap
      override:
        beta: 0.5  # 0 for perfect fairness, 1 for no fairness constraint
    - ref: pairwise_equity_cap
      override:
        rho: 0.5   # 0 for perfect fairness, 1 for no fairness constraint
    # Nutritional adequacy floors
    - ref: household_adequacy_floor
      override:
        omega: 0.5 # 1 for full adequacy (relative to global mean), 0 for no adequacy constraint
        use_slack: False
    - ref: nutrient_adequacy_floor
      override:
        gamma: 0.5  # 1 for full adequacy (relative to global mean), 0 for no adequacy constraint
        use_slack: False
    - ref: pairwise_adequacy_floor
      override:
        kappa: 0.5  # 1 for full adequacy (relative to global mean), 0 for no adequacy constraint
        use_slack: False

  objectives:
    - ref: sum_utility

solver:
  name: appsi_highs
  options:
    time_limit: 10
    log_to_console: True
    log_file: solver.log
