{
  "run": {
    "id": "20251020T122423Z_demo_infeasible",
    "started_at": "2025-10-20T12:24:23Z"
  },
  "solver": {
    "name": "appsi_highs",
    "status": "error",
    "termination": "error",
    "elapsed_sec": 0.1072,
    "is_feasible": false,
    "error_message": "A feasible solution was not found, so no solution can be loaded. If using the appsi.solvers.Highs interface, you can set opt.config.load_solution=False. If using the environ.SolverFactory interface, you can set opt.solve(model, load_solutions = False). Then you can check results.termination_condition and results.best_feasible_objective before loading a solution."
  },
  "artifacts": [
    {
      "path": "solver_report.json",
      "sha256": "b9ae3379668388dc7cbba96dcaf0a01fb102db66dd2466bb1e3943485b58d1e4",
      "kind": "metric"
    },
    {
      "path": "model_stats.json",
      "sha256": "149d0554b64e432b9d0e6c4faf45e9d63f5d61a3bf7753290d9b1a0628648249",
      "kind": "metric"
    },
    {
      "path": "kpis.json",
      "sha256": "a8c5a469f002b63dd857e07d5fb4180a0445dbfd919ce6f157743adf4315c32e",
      "kind": "metric"
    },
    {
      "path": "variables.csv",
      "sha256": "c5c9160d013e9c3dc03a4470f27408115df11f7dbb53e6c4136d41a51412dc32",
      "kind": "table"
    },
    {
      "path": "solution.csv",
      "sha256": "c570a15862de72172510e8da1de84267ed489d6b2f020eef8798b59a5d49d7d5",
      "kind": "table"
    },
    {
      "path": "report.md",
      "sha256": "80bfc3cbd50a56cc38033f6bcb57e238ee91a38ee02cfaad102d1c9b6580b445",
      "kind": "report"
    },
    {
      "path": "config_snapshot.json",
      "sha256": "aa8b4c8147e1aa7297fe19c8cf73ebcc45db8c4146266cd38b5a71f8b6fccf95",
      "kind": "config"
    },
    {
      "path": "model.mps",
      "sha256": "8c7bf8101995887c697e9854ab7a8c491452bb73c6e8f2800ccdf77e8633a3c2",
      "kind": "model"
    },
    {
      "path": "solver.log",
      "sha256": "67e0f52a7071117fded20d5cdee82bf9689d81923ae0e8b5669d7ee1a61796f9",
      "kind": "log"
    }
  ]
}